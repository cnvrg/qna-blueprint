---
title: QnA Training
version: 1.0.0 
description: "Training the QnA on a custom dataset and deploying it"
long_description: "Training on custom dataset provided in SQUAD format. The dataset is split into train and val datasets and converted to pytorch format. Then after training an endpoint is deployed for inference using the trained model."

author: "cnvrg"
author_email: "libhub@cnvrg.io"


tags:
  - training


tasks:
  - title: S3 Connector
    top: 300
    left: 0

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec

    # The library data
    library: s3-connector
    library_version: 1.0.0

    # The flattened library parameters (in this case we have training library)
    command: python s3-connector.py

    requirements:
      cpu: 3.5
      memory: 8
      gpu: 0
      hpu: 0

    image: cnvrg:v5.0
    language: python3

    # The "arguments" property changes to "params", rest remains the same.
    # Params in the blueprint yaml can be used to override the arguments in the library.
    params:
      - key: endpoint
        type: 'categorical'
        values:
          - 'http://s3.amazonaws.com download'
      - key: bucketname
        type: 'categorical'
        values:
          - 'libhub-readme'
      - key: localdir
        type: 'categorical'
        values:
          - '/cnvrg'
      - key: prefix
        type: 'categorical'
        values:
          - 'qna_data/'
          
  - title: Prepare
    top: 100
    left: 0

    type: exec

    library: qna-prepare
    library_version: 1.0.0

    command: python3 prepare_data.py

    requirements:
      cpu: 3.5
      memory: 8
      gpu: 0
      hpu: 0

    image: cnvrg/cnvrg:v5.0
    language: python3

    params:
        - key: data_source
          type: 'categorical'
          values: 
              - '/input/s3_connector/qna_data/trainfiltered.json'

          
  - title: Train
    top: 300
    left: 0

    type: exec

    library: qna-train
    library_version: 1.0.0

    command: python3 run_qg.py

    requirements:
      cpu: 3.5
      memory: 8
      gpu: 0
      hpu: 0

    image: cnvrg/cnvrg:v5.0
    language: python3

    params:
      - key: num_train_epochs
        type: 'categorical'
        values: 
            - '10'
      - key: output_dir
        type: 'categorical'
        values: 
            - 't5-small-qg-hl'

  
  - title: Inference
    top: 400
    left: 300

    type: deploy

    library: qna-inference
    library_version: 1.0.0

    kind: webservice

    requirements:
      cpu: 3.5
      memory: 8
      gpu: 0
      hpu: 0

    image: cnvrg/cnvrg:v5.0
    language: python3

    accept_files: false
    gunicorn_config:
    - key: workers
      value: '1'
    file_name: predict.py 
    function_name: predict
    prep_file: '' 
    prep_function: '' 
    input_example:
      img: text
    input_schema:
      img: text
    output_schema: {}
      
relations:
    - from: S3 Connector
      to: Prepare
    - from: Prepare
      to: Train
    - from: Train
      to: Inference